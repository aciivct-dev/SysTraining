Aggregate Function	Descriptions
count()	It returns the number of rows, including rows with NULL values in a group.
sum()	It returns the total summed values (Non-NULL) in a set.
average()	It returns the average value of an expression.
min()	It returns the minimum (lowest) value in a set.
max()	It returns the maximum (highest) value in a set.
groutp_concat()	It returns a concatenated string.
first()	It returns the first value of an expression.
last()	It returns the last value of an expression.

and
---
SELECT *  FROM cus_tbl  WHERE cus_firstname = 'Ajeet' AND cus_id > 3; 

or
--
SELECT *  FROM cus_tbl   WHERE cus_firstname = 'Ajeet'  OR cus_id > 100;  

LIKE condition
In MySQL, LIKE condition is used to perform pattern matching to find the correct result. It is used in SELECT, INSERT, UPDATE and DELETE statement with the combination of WHERE clause.
 SELECT officer_name  FROM officers   WHERE address LIKE 'Luck%';  

IN Condition
The MySQL IN condition is used to reduce the use of multiple OR conditions in a SELECT, INSERT, UPDATE and DELETE statement.
SELECT *  FROM officers  WHERE officer_name IN ('Ajeet', 'Vimal', 'Deepika');  

BETWEEN Condition
The MYSQL BETWEEN condition specifies how to retrieve values from an expression within a specific range. It is used with SELECT, INSERT, UPDATE and DELETE statement.

SELECT * FROM officers WHERE officer_id BETWEEN 1 AND 3;  

JOINS
MySQL JOINS are used with SELECT statement. It is used to retrieve data from multiple tables. It is performed whenever you need to fetch records from two or more tables.

There are three types of MySQL joins:

MySQL INNER JOIN (or sometimes called simple join)
MySQL LEFT OUTER JOIN (or sometimes called LEFT JOIN)
MySQL RIGHT OUTER JOIN (or sometimes called RIGHT JOIN)

 Inner JOIN (Simple Join)
The MySQL INNER JOIN is used to return all rows from multiple tables where the join condition is satisfied. It is the most common type of join.
SELECT columns FROM table1  INNER JOIN table2  ON table1.column = table2.column;  

Left Outer Join
The LEFT OUTER JOIN returns all rows from the left hand table specified in the ON condition and only those rows from the other table where the join condition is fulfilled.
SELECT columns FROM table1 LEFT [OUTER] JOIN table2  ON table1.column = table2.column;  

Right Outer Join
The MySQL Right Outer Join returns all rows from the RIGHT-hand table specified in the ON condition and only those rows from the other table where he join condition is fulfilled.

SELECT columns  FROM table1  RIGHT [OUTER] JOIN table2  ON table1.column = table2.column;  

WHERE Clause
MySQL WHERE Clause is used with SELECT, INSERT, UPDATE and DELETE clause to filter the results. It specifies a specific position where you have to do the operation.
SELECT *  FROM officers  WHERE address = 'Mau';  

Distinct Clause
MySQL DISTINCT clause is used to remove duplicate records from the table and fetch only the unique records. The DISTINCT clause is only used with the SELECT statement.

SELECT DISTINCT address  FROM officers;  

ORDER BY Clause
The MYSQL ORDER BY Clause is used to sort the records in ascending or descending order.

SELECT expressions   FROM tables  [WHERE conditions]  ORDER BY expression [ ASC | DESC ];  
SELECT *  FROM officers  WHERE address = 'Lucknow'  ORDER BY officer_name;  

GROUP BY Clause
The MYSQL GROUP BY Clause is used to collect data from multiple records and group the result by one or more column. It is generally used in a SELECT statement.

SELECT address, COUNT(*) FROM   officers   GROUP BY address;   

HAVING Clause
MySQL HAVING Clause is used with GROUP BY clause. It always returns the rows where condition is TRUE.

SELECT emp_name, SUM(working_hours) AS "Total working hours"  FROM employees  GROUP BY emp_name  HAVING SUM(working_hours) > 5; 
